user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
            '$status $body_bytes_sent $request_length "$http_referer" '
            '"$http_user_agent" $request_time $upstream_response_time $request_id';

    log_format xfwd '$http_x_forwarded_for - $remote_user [$time_local] '
            '"$request" $status $body_bytes_sent $request_length '
            '"$http_referer" "$http_user_agent" $request_time '
            '$upstream_response_time $request_id';

    sendfile        on;

    keepalive_timeout  65;

    gzip on;
    gzip_comp_level 6;
    gzip_min_length 325;
    gzip_types
        text/plain
        text/css
        text/http
        text/xml
        text/javascript
        application/json
        application/x-javascript
        application/xml;

    map $http_x_forwarded_proto $orig_scheme {
        default $scheme;
        https https;
    }

    upstream django {
        server totem-service:8000;
    }

    server {
        client_max_body_size 300M;

        listen 80;
        server_name _;
        charset utf-8;

        access_log  /var/log/nginx/access.log  main;

        location ~ /static {
            rewrite '^/static/(.*)$' /$1 break;
            root /usr/src/static/;
        }


        location ^~ /private-media {
           # root /usr/src/;
           alias /usr/src/media/;
           internal;
        }

        location = /favicon.ico {
            root /usr/src/static/;
        }

        location ~ ^/(.*)$ {
            proxy_pass http://django;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $orig_scheme;
            proxy_set_header X-Request-ID $request_id;
        }

        location = /robots.txt {
            add_header Content-Type text/plain;
            return 200 "User-agent: *\nDisallow: /\n";
        }
    }
}
